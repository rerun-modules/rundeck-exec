#!/usr/bin/env bash

# To implement this command, edit the "Command implementation" section below. 

# Usage
# -----

# Comments prefixed with `#/` are managed by stubbs.
# The `command` and `usage` comments describe the command
# and show its options.
# 
#/ command: rundeck-run:output-text: "print execution output to stdout"
#/ usage: rerun rundeck-run:output-text  --id <> [ --last-lines <>] [ --format <text>]  --server-url <"${SERVER_URL:-}">  --api-token <> 

# Load common functions
# ---------------------

# Load the function library for this module.
# This loads rerun functions, too.
. $RERUN_MODULE_DIR/lib/functions.sh output-text || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------

# This script is designed to _fail-fast_.

# Trap errors and exit. The call to `rerun_die` will print the
# the error message and exit with the error command exit status. 

trap 'rerun_die $? "*** command failed: rundeck-run:output-text. ***"' ERR

# Run [set] `nounset` to treat unset variables as errors. Set [pipefail]
# so a pipeline return status is the value of the last 
# (rightmost) command to exit with non-zero status.
#
# [set]: http://ss64.com/bash/set.html
# [pipefail]: http://www.gnu.org/software/bash/manual/html_node/Pipelines.html

set -o nounset -o pipefail

# Command variables
# -----------------

# This command script can access the following variables
# declared by `rerun` or by the option parser function.

#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: ID LAST_LINES FORMAT SERVER_URL API_TOKEN

# The `rerun_options_parse` function processes the command line
# arguments. Each accepted command line flag results in setting 
# one the corresponding option variables.

rerun_options_parse "$@"


# Command implementation
# ----------------------

CURL_OUT=$(mktemp -t curl.out.XXXXXXXXXX)

params="format=$FORMAT"
[[ -n "${LAST_LINES:-}" ]] && params="$params&lastlines=$LAST_LINES"

if ! http_code=$(rundeck_curl -w "%{http_code}" \
	-H "X-Rundeck-Auth-Token: $API_TOKEN" \
	-H 'Accept: text/plain' \
    -X GET "${SERVER_URL}/api/12/execution/$ID/output?$params" \
    -o $CURL_OUT 2>/dev/null)
then
    case ${http_code:-} in
    	204) : ;; # successful removal
    	404) rerun_die 3 "Execution not found: $ID" ;;
		* ) rerun_die 3 "API error (HTTP response: $http_code, GET ${SERVER_URL}/api/12/execution/$ID)." ;;
	esac  
fi

cat $CURL_OUT && rm $CURL_OUT

# Done. Exit with last command exit status.
exit $?

